AWSTemplateFormatVersion: "2010-09-09"

Description: Template to install CloudWatchAgent on suse. It was validated on suse 12

Parameters:
  SSMKey:
    Description: Name of parameter store which contains the json configuration of CWAgent.
    Type: String
    Default: AmazonCloudWatch-DefaultLinuxConfigCloudFormation

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.medium
    ConstraintDescription: must be a valid EC2 instance type.

  SUSEVersion:
    Type: String
    AllowedValues: 
      - SLES15SP5
    Default: SLES15SP5
    Description: SUSE Linux Enterprise Server version to deploy


  IAMRole:
    Description: EC2 attached IAM role
    Type: String
    Default: CloudWatchAgentAdminRole
    ConstraintDescription: must be an existing IAM role which will be attached to EC2 instance.

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    Default: 0.0.0.0/0
    MinLength: "9"
    MaxLength: "18"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  SubnetId:
    Type: AWS::EC2::Subnet::Id

Mappings:
  RegionMap:
    us-east-1:
      SLES15SP5: ami-0d62a8e6541a2d491
    us-east-2:
      SLES15SP5: ami-05d1f1c3db2b2eb0c
    us-west-1:
      SLES15SP5: ami-060034d187be82d31
    us-west-2:
      SLES15SP5: ami-066c85d277ae33d38
    eu-west-1:
      SLES15SP5: ami-028867095499bce4b
    eu-west-2:
      SLES15SP5: ami-03d783398e1e54eb1
    ap-northeast-1:
      SLES15SP5: ami-05ef8ea5a07946994
    ap-northeast-2:
      SLES15SP5: ami-0f8bf550807d8d01a
    ap-southeast-1:
      SLES15SP5: ami-0db03992e79210b9f
    ap-southeast-2:
      SLES15SP5: ami-084fd76702fabcf2c

Resources:
  EC2Instance:
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT15M
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - 01_setupCfnHup
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
          UpdateEnvironment:
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent

        # Definition of a dummy file, that change the contents of the dummy file can trigger the agent to reload the configuration from SSM parameter store.
        02_config-amazon-cloudwatch-agent:
          files:
            /opt/aws/amazon-cloudwatch-agent/etc/dummy.version:
              content: |
                "You can change the VERSION below to to simulate the update of metadata"
                "VERSION=1.0"

        # Invoke amazon-cloudwatch-agent-ctl to restart the AmazonCloudWatchAgent.
        03_restart_amazon-cloudwatch-agent:
          commands:
            01_stop_service:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a stop
            02_start_service:
              command: !Sub
                - |
                  /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c ssm:${ssmkey} -s
                - ssmkey: !Ref SSMKey

        # Cfn-hup setting, it is to monitor the change of metadata.
        # When there is change in the contents of json file in the metadata section, cfn-hup will call cfn-init to restart the AmazonCloudWatchAgent.
        01_setupCfnHup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/hooks.d/amazon-cloudwatch-agent-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init.02_config-amazon-cloudwatch-agent
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets UpdateEnvironment
                runas=root
              mode: "000400"
              owner: root
              group: root
            /lib/systemd/system/cfn-hup.service:
              content: |
                [Unit]
                Description=cfn-hup daemon
                [Service]
                Type=simple
                ExecStart=/opt/aws/bin/cfn-hup
                Restart=always
                [Install]
                WantedBy=multi-user.target
          commands:
            01enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: systemctl start cfn-hup.service
    Properties:
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref IAMRole
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - RegionMap
        - !Ref 'AWS::Region'
        - !Ref SUSEVersion
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !GetAtt InstanceSecurityGroup.GroupId
      UserData: !Base64
        Fn::Sub:
          - |
            #!/bin/bash
            rpm -Uvh https://s3.amazonaws.com/amazoncloudwatch-agent/suse/amd64/latest/amazon-cloudwatch-agent.rpm
            /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c ssm:${ssmkey} -s
            curl -O https://bootstrap.pypa.io/pip/3.6/get-pip.py
            # Install pip using python3
            python3 get-pip.py
            export PATH=$PATH:/usr/local/bin	
            pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
            cfn-init -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets default
            cfn-signal -e $? --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}
          - ssmkey: !Ref SSMKey

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: !Ref SSHLocation
