{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Template to install CloudWatchAgent on redhat. It was validated on redhat 7.5",
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "InstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "t3.medium",
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "RHELVersion": {
            "Type": "String",
            "AllowedValues": [
                "RHEL9"
            ],
            "Default": "RHEL9",
            "Description": "RHEL version to deploy"
        },
        "IAMRole": {
            "Description": "EC2 attached IAM role",
            "Type": "String",
            "Default": "CloudWatchAgentAdminRole",
            "ConstraintDescription": "must be an existing IAM role which will be attached to EC2 instance."
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "Default": "0.0.0.0/0",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "SubnetId": {
            "Type": "AWS::EC2::Subnet::Id"
        }
    },

    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "RHEL9": "ami-0fb13bb53494158e9"
            },
            "us-east-2": {
                "RHEL9": "ami-0aeea2f24f6d3ba32"
            },
            "us-west-1": {
                "RHEL9": "ami-068c2af1200ef7356"
            },
            "us-west-2": {
                "RHEL9": "ami-0367f2b5c3d1ef960"
            },
            "eu-west-1": {
                "RHEL9": "ami-0f0f1c02e5e4d9d9f"
            },
            "eu-west-2": {
                "RHEL9": "ami-02b1e3a99e36afd1a"
            },
            "ap-northeast-1": {
                "RHEL9": "ami-0eade93757ef7bb6c"
            },
            "ap-northeast-2": {
                "RHEL9": "ami-097698b6cd8164ea2"
            },
            "ap-southeast-1": {
                "RHEL9": "ami-0b9521fddc9871128"
            },
            "ap-southeast-2": {
                "RHEL9": "ami-0eea634029e7b983c"
            }
        }
    },

    "Resources": {
        "EC2Instance": {
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": 1,
                    "Timeout": "PT15M"
                }
            },
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "default": [
                            "01_setupCfnHup",
                            "02_config-amazon-cloudwatch-agent",
                            "03_restart_amazon-cloudwatch-agent"
                        ],
                        "UpdateEnvironment": [
                            "02_config-amazon-cloudwatch-agent",
                            "03_restart_amazon-cloudwatch-agent"
                        ]
                    },
                    "02_config-amazon-cloudwatch-agent": {
                        "files": {
                            "/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json": {
                                "content": "{\n  \"metrics\": {\n    \"append_dimensions\": {\n      \"AutoScalingGroupName\": \"${!aws:AutoScalingGroupName}\",\n      \"ImageId\": \"${!aws:ImageId}\",\n      \"InstanceId\": \"${!aws:InstanceId}\",\n      \"InstanceType\": \"${!aws:InstanceType}\"\n    },\n    \"metrics_collected\": {\n      \"mem\": {\n        \"measurement\": [\n          \"mem_used_percent\"\n        ]\n      },\n      \"swap\": {\n        \"measurement\": [\n          \"swap_used_percent\"\n        ]\n      }\n    }\n  }\n}\n"
                            }
                        }
                    },
                    "03_restart_amazon-cloudwatch-agent": {
                        "commands": {
                            "01_stop_service": {
                                "command": "/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a stop"
                            },
                            "02_start_service": {
                                "command": "/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s"
                            }
                        }
                    },
                    "01_setupCfnHup": {
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Sub": "[main]\nstack=${AWS::StackId}\nregion=${AWS::Region}\ninterval=1\n"
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/amazon-cloudwatch-agent-auto-reloader.conf": {
                                "content": {
                                    "Fn::Sub": "[cfn-auto-reloader-hook]\ntriggers=post.update\npath=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init.02_config-amazon-cloudwatch-agent\naction=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets UpdateEnvironment\nrunas=root\n"
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/lib/systemd/system/cfn-hup.service": {
                                "content": "[Unit]\nDescription=cfn-hup daemon\n[Service]\nType=simple\nExecStart=/opt/aws/bin/cfn-hup\nRestart=always\n[Install]\nWantedBy=multi-user.target\n"
                            }
                        },
                        "commands": {
                            "01enable_cfn_hup": {
                                "command": "systemctl enable cfn-hup.service"
                            },
                            "02start_cfn_hup": {
                                "command": "systemctl start cfn-hup.service"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "IamInstanceProfile": {
                    "Ref": "IAMRole"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "RHELVersion"
                        }
                    ]
                },
                "SubnetId": {
                    "Ref": "SubnetId"
                },
                "SecurityGroupIds": [
                    {
                        
                        "Fn::GetAtt" : [ "InstanceSecurityGroup", "GroupId" ]
                    } 
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Sub": "#!/bin/bash\nrpm -Uvh https://s3.amazonaws.com/amazoncloudwatch-agent/redhat/amd64/latest/amazon-cloudwatch-agent.rpm\nyum update -y\nyum install python3 -y\ncurl -O https://bootstrap.pypa.io/get-pip.py\n# Install pip using python3\npython3 get-pip.py\nexport PATH=$PATH:/usr/local/bin\npip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz\ncfn-init -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets default\ncfn-signal -e $? --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}\n"
                    }
                }
            }
        },
        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH access via port 22",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    }
                ]
            }
        }
    }
}
